/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Tags as PrismaTags } from "@prisma/client";

export class TagsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TagsCountArgs, "select">): Promise<number> {
    return this.prisma.tags.count(args);
  }

  async tagsItems(args: Prisma.TagsFindManyArgs): Promise<PrismaTags[]> {
    return this.prisma.tags.findMany(args);
  }
  async tags(args: Prisma.TagsFindUniqueArgs): Promise<PrismaTags | null> {
    return this.prisma.tags.findUnique(args);
  }
  async createTags(args: Prisma.TagsCreateArgs): Promise<PrismaTags> {
    return this.prisma.tags.create(args);
  }
  async updateTags(args: Prisma.TagsUpdateArgs): Promise<PrismaTags> {
    return this.prisma.tags.update(args);
  }
  async deleteTags(args: Prisma.TagsDeleteArgs): Promise<PrismaTags> {
    return this.prisma.tags.delete(args);
  }
}
